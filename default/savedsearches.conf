# Copyright (C)2013 Will (Wil) Cooley
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

[default]
disabled = 0

[puppet_hosts_table]
search = | puppethosts
description = Search which generates table of Puppet-managed hosts with columns \
of (host,fqdn), where "host" is the short host name or node name. By default    \
the 'puppethosts.py' custom search command is used, which uses the Puppet REST  \
API to generate the list. This search is scheduled with another saved search    \
to create an output lookup CSV file.

[puppet_general_stats_table]
description = One-line event of general stats
search = eventtype=puppet_agent|stats dc(host) AS "Nodes"\
| appendcols [search eventtype=puppet_cimlog_change\
    |stats count AS "Changes"]\
| appendcols [search eventtype=puppet_cimlog_error\
    |stats count AS "Agent Errors"]\
| appendcols [search eventtype=puppet_cimlog_logs class=*\
    |stats dc(class) AS "Classes"]\
| appendcols [search eventtype=puppet_cimlog_logs resource_type=*\
    |stats dc(resource_type) AS "Resource Types"]

[puppet_hosts_csv]
search = |savedsearch puppet_hosts_table | outputlookup createinapp=t puppet_hosts.csv
enableSched = 1
cron_schedule = */30 * * * *
dispatch.earliest_time = -30m@m
dispatch.latest_time = now

[update_puppet_run_time_stats]
search = |savedsearch puppet_agent_run_time_avg_30m|eval query=round(query,2) |rename query AS run_time_avg |appendcols [|savedsearch puppet_agent_run_time_stdev_30m|eval query=round(query,2)|rename query AS run_time_stdev]|outputlookup createinapp=t puppet_run_stats.csv
cron_schedule = */15 * * * *
description = Scheduled search to record Puppet agent run stats
action.email.inline = False
alert.suppress = 0
alert.track = 0
enableSched = 1
dispatch.earliest_time = -30m@m
dispatch.latest_time = now

[puppet_errors_by_resource_type]
action.email.inline = False
alert.suppress = 0
alert.track = 1
cron_schedule = 0 0 * * *
description = Agent Errors by Resource Type
search = eventtype=puppet_cimlog_logs resource_type=* level=err\
| chart count AS Count by resource_type\
| sort -Count\
| rename resource_type AS "Resource Type"

[puppet_errors_by_host]
action.email.inline = False
alert.suppress = 0
alert.track = 1
cron_schedule = 0 0 * * *
description = Agent Errors by Host
search = eventtype=puppet_cimlog_metrics (failed > 0) category=resources\
| chart sum(failed) AS Count by dest\
| sort -Count\
| rename dest AS Host

[puppet_resource_stats]
action.email.inline = False
alert.suppress = 0
alert.track = 0
cron_schedule = 14,44 * * * *
enableSched = 1
description = Stats of managed resources
dispatch.earliest_time = -1h
dispatch.latest_time = now
search = eventtype=puppet_cimlog_metrics total total=* category category=resources\
|dedup dest |chart\
    avg(total) as res_total_avg,                        sum(total) as res_total_sum,\
    avg(changed) as res_changed_avg,                    sum(changed) as res_changed_sum,\
    avg(failed) as res_failed_avg,                      sum(failed) as res_failed_sum,\
    avg(failed_to_restart) as res_failed_to_restart_avg,sum(failed_to_restart) as res_failed_to_restart_sum,\
    avg(out_of_sync) as res_out_of_sync_avg,            sum(out_of_sync) as res_out_of_sync_sum,\
    avg(restarted) as res_restarted_avg,                sum(restarted) as res_restarted_sum,\
    avg(scheduled) as res_scheduled_avg,                sum(scheduled) as res_scheduled_sum,\
    avg(skipped) as res_skipped_avg,                    sum(skipped) as res_skipped_sum

[puppet_errors_by_class]
action.email.inline = False
alert.suppress = 0
alert.track = 1
cron_schedule = 0 0 * * *
description = Agent Errors by Class
search = eventtype=puppet_cimlog_logs class=* level=err\
| chart count AS Count by class\
| sort Count\
| rename count AS Count

[puppet_changes_by_resource_type]
action.email.inline = False
alert.suppress = 0
alert.track = 1
cron_schedule = 0 0 * * *
description = Changes by Resource Type
search = eventtype=puppet_cimlog_resource\
| chart count AS Count by resource_type\
| sort Count\
| rename resource_type AS "Resource Type"

[puppet_changes_by_host]
action.email.inline = False
alert.suppress = 0
alert.track = 1
cron_schedule = 0 0 * * *
description = Changes by Host
search = eventtype=puppet_cimlog_metrics category=changes\
|chart sum(total) AS Count by dest | where Count > 0\
| sort Count\
| rename dest AS Host

[puppet_changes_by_class]
action.email.inline = False
alert.suppress = 0
alert.track = 1
cron_schedule = 0 0 * * *
description = Changes by Class
search = eventtype=puppet_cimlog_logs class=* NOT level=err\
| chart count AS Count by class\
| sort Count\
| rename class AS Class

[puppet_master_without_successful_run]
action.email.inline = False
alert.suppress = 0
alert.track = 0
cron_schedule = */15 * * * *
description = Puppet master hosts without a successful run
dispatch.earliest_time = -1h
enableSched = 1
search = | `puppet_master_hosts`\
| search eventtype=puppet NOT [search eventtype=puppet "Finished catalog run"\
              | dedup host\
              | fields host]\

[hosts_without_successful_run]
action.email.inline = True
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
cron_schedule = */15 * * * *
description = Hosts without a successful Puppet run not disabled
dispatch.earliest_time = -24h@h
enableSched = 1
search =  | `puppet_hosts_seen`\
| search NOT [search eventtype=puppet "Finished catalog run"\
              | dedup host\
              | fields host]\
| search NOT [search eventtype=puppet status=disabled\
             | dedup host\
             | fields host]\
| dedup host sortby host\
| table host\
| rename host AS Host

[Unseen Puppet inventory]
description = Hosts listed in Puppet inventory from which no events have been seen recently.
action.email.inline = True
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -1m@m
dispatch.latest_time = now
search = |`puppet_hosts` |search NOT [|`puppet_hosts_seen`] | table host

[puppet_agent_run_time_stdev_30m]
action.email.inline = False
alert.suppress = 0
alert.track = 0
cron_schedule = */15 * * * *
description = Standard deviation of Puppet agent run-time over last 30m
dispatch.earliest_time = -30m@m
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = `puppet_agent_run_time(*)` |dedup host| stats stdev(catalog_run_time) as query|fields query |head 1

[puppet_agent_run_time_avg_30m]
action.email.inline = False
alert.suppress = 0
alert.track = 0
cron_schedule = */15 * * * *
dispatch.earliest_time = -30m@m
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = `puppet_agent_run_time(*)` | stats avg(catalog_run_time) as query |fields query |head 1

[puppet_run_times_greater_than_1_stdev]
action.email.inline = False
alert.suppress = 0
alert.track = 0
cron_schedule = */15 * * * *
description = Puppet nodes with average run-time greater than 1 standard deviation from average
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = `puppet_agent_run_time(*)` | stats avg(catalog_run_time) as avg_run by host\
| where avg_run > tonumber([inputlookup puppet_run_stats.csv|eval query = run_time_avg + run_time_stdev|fields query])\
| eval avg_run=round(avg_run,2)\
|sort -avg_run\
|rename host AS "Puppet Node"\
|rename avg_run AS "Average Run-Time"

[puppet_disabled_hosts_table]
action.email.inline = True
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
cron_schedule = 0 6 * * *
description = Table of disabled hosts.
dispatch.earliest_time = -12h@h
enableSched = 1
search = eventtype=puppet status=disabled\
| dedup host\
| eval _time = strptime(since, "%Y-%m-%d %H:%M:%S")\
| sort by _time\
| reltime\
| eval Since = strftime(_time, "%Y-%m-%d %H:%M") + " (" + reltime + ")"\
| rename host AS Host\
| rename reason AS Reason\
| rename bywhom AS "By Whom"\
| table Host, Reason, Since, "By Whom"

[Puppet Errors By Host]
action.email.inline = True
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
cron_schedule = 2,32 * * * *
dispatch.earliest_time = -4h@h
dispatch.latest_time = now
displayview = report_builder_display
enableSched = 1
request.ui_dispatch_view = report_builder_display
search = eventtype=puppet_agent_error | stats count by host

[Puppet Disabled]
alert.expires = 7d
alert.severity = 2
alert.suppress = 0
alert.suppress.period = 24h
alert.track = 0
counttype = number of hosts
cron_schedule = 0 0 * * 6
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 1
relation = greater than
request.ui_dispatch_view = flashtimeline
search = eventtype=puppet "puppet disabled"

[Puppet Problems]

description = Puppet messages with syslog level err or warn. Requires events to \
include a syslog_level field.
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = eventtype=puppet syslog_level="err" OR syslog_level="warn"

[Puppet Versions: Table]
alert.suppress = 0
alert.track = 1
description = Table of reported Puppet versions
dispatch.earliest_time = -30m@m
dispatch.latest_time = now
displayview = flashtimeline
search = eventtype=puppet_master puppetversion=* node=* [`puppet_master_hosts`] \
|dedup node\
|table node, puppetversion\
|sort str(puppetversion),node\
|rename puppetversion AS "Puppet Version"\
|rename node AS "Host"

[Puppet Versions: Chart]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -30m@m
dispatch.latest_time = now
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
cron_schedule = 4 * * * *
enableSched = 1
search = eventtype=puppet_master puppetversion=* node=* [`puppet_master_hosts`] \
|dedup node \
|chart count by puppetversion

[Lookup table: Puppet hosts]
description = Update lookup table of known Puppet hosts from Puppet master inventory. This isn't strictly necessary, but it's nicer to load from a local file cache instead of from the master itself.
action.email.inline = True
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
cron_schedule = */30 * * * *
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = |puppethosts | outputlookup puppet_hosts.csv

[Lookup table: Puppet hosts seen in last 30 days]
description = Update lookup of 'last seen' time of Puppet hosts & environments. Note that this only includes hosts which have successfully retrieved a compiled catalog, so it excludes hosts which have the Puppet agent disabled or for which catalog compilation fails.
cron_schedule = */15 * * * *
enableSched = 1
dispatch.earliest_time = -15m@m
dispatch.latest_time = -0m@m
search = eventtype=puppet_master "Compiled catalog for" \
| fields node, environment, host    \
| dedup node                        \
| eval last_seen=_time              \
| rename host AS master             \
| rename node AS host               \
| inputlookup append=t puppet_hosts_last_seen.csv \
| where last_seen > relative_time(now(), "-30d") \
| dedup host sortby - last_seen \
| fields host, environment, master, last_seen \
| fields - _* \
| outputlookup puppet_hosts_last_seen.csv

# Now that we are including masters in the Puppet hosts search, do we need this any more?
# What about for CA- or fileserver- or filebucket-only "masters"?
[Lookup table: Puppet masters in last 30 days]
description = Scheduled search to update table of Puppet masters seen in the last 30 days
search = eventtype=puppet process=puppet-master \
| fields host \
| dedup host \
| eval last_seen=_time \
| inputlookup append=t puppet_master.csv \
| where last_seen > relative_time(now(), "-30d") \
| dedup host sortby - last_seen \
| fields host, last_seen \
| fields - _* \
| outputlookup puppet_master.csv
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
cron_schedule = */15 * * * *

[Catalog Application Time (3d)]
action.email.inline = True
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
cron_schedule = */30 * * * *
dispatch.earliest_time = -3d@d
dispatch.latest_time = now
displayview = report_builder_display
enableSched = 1
request.ui_dispatch_view = report_builder_display
search = index=summary report=puppet_cimlog_resource_runtimes \
    | timechart avg(total) AS "Run Time"

[Timechart - Rate of Errors]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
cron_schedule = */5 * * * *
dispatch.earliest_time = -3d
dispatch.latest_time = now
displayview = report_builder_display
enableSched = 1
request.ui_dispatch_view = report_builder_display
search = index=summary report=puppet_cimlog_errors_by_host \
    | timechart span=15m count

[Recent Changes]
action.email.inline = True
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
cron_schedule = 5,20,35,50 * * * *
dispatch.earliest_time = -3d
dispatch.latest_time = now
displayview = report_builder_display
enableSched = 1
request.ui_dispatch_view = report_builder_display
search = index=summary report=puppet_cimlog_resource_changes_by_host \
    | timechart sum(total) as "Total Changes"

[Run-times by resource (all)]
action.email.inline = True
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
cron_schedule = */30 * * * *
dispatch.earliest_time = -3d
dispatch.latest_time = now
displayview = report_builder_display
enableSched = 1
request.ui_dispatch_view = report_builder_display
search = index=summary report=puppet_cimlog_resource_runtimes \
    | timechart avg(rtime_*) \
    | fields - avg(rtime_config_retrieval) \
    | fillnull value=0

[Catalog Compile Time (3d)]
cron_schedule = */6 * * * *
dispatch.earliest_time = -3d
dispatch.latest_time = now
enableSched = 1
search = index=summary report=puppet_catalog_compile_time_total_summary \
    | timechart span=6m avg(catalog_compile_time) AS "Compile"

[Puppet-Git: Recent Commits]
alert.suppress = 0
alert.track = 0
cron_schedule = 9,19,29,39,49,59 * * * *
description = Table of recent commits to Puppet git repo.
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
search = process=git-post-update git_repo=puppet\
    | eval Time=strftime(_time, "%a, %H:%M") \
    | table git_author, git_subject, Time\
    | rename git_author AS Committer\
    | rename git_subject AS Subject

[Chart: Top Puppet Agent Errors]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = eventtype=puppet_cimlog_error\
    | top msg showperc=false countfield=ct\
    | table ct, msg

[Chart: Top Puppet Master Errors]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = eventtype=puppet_master eventtype=puppet_error\
    | top event_msg showperc=false countfield=ct\
    | table ct, event_msg

[Summary: Resource run-times]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = -0m@m
enableSched = 1
action.summary_index = 1
action.summary_index.report = puppet_cimlog_resource_runtimes
search = eventtype=puppet_cimlog_metrics category=time \
    | sitimechart minspan=1m avg(rtime_*), avg(total)

[Summary: Resource changes by host]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = -0m@m
enableSched = 1
action.summary_index = 1
action.summary_index.report = puppet_cimlog_resource_changes_by_host
search = eventtype=puppet_cimlog_metrics category=changes total>0   \
    | sitimechart minspan=1m sum(total) as total by dest

[Summary: Errors by host]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = -0m@m
enableSched = 1
action.summary_index = 1
action.summary_index.report = puppet_cimlog_errors_by_host
search = eventtype=puppet_cimlog_logs level=err \
    | sitimechart minspan=1m count by dest

[Summary: Catalog Compile Time By Node]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = -0m@m
enableSched = 1
action.summary_index = 1
action.summary_index.report = puppet_catalog_compile_time_summary
search = eventtype=puppet_catalog_compile_time \
    | sitimechart minspan=1m avg(catalog_compile_time) by node

[Summary: Catalog Compile Time Total]
cron_schedule = */6 * * * *
dispatch.earliest_time = -6m@m
dispatch.latest_time = -0m@m
enableSched = 1
action.summary_index = 1
action.summary_index._name = summary
action.summary_index.report = puppet_catalog_compile_time_total_summary
search = index=summary report=puppet_catalog_compile_time_summary \
    | sitimechart span=6m avg(catalog_compile_time)


[Chart: Top Deprecation Messages]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -24h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = eventtype=puppet_master deprecat*  \
    | chart count AS Count by event_msg     \
    | rename event_msg AS Event             \
    | sort - Count

[Table: Dynamic-variable lookups]
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -24h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = \
eventtype=puppet_master deprecated "dynamic lookup of"  \
| fields + event_msg                                    \
| dedup event_msg                                       \
| rex field=_raw "Dynamic lookup of (?P<dyn_var>\S+) at (?P<manifest_line>\S+) is deprecated"   \
| eval last_seen = strftime(_time, "%F %T")             \
| table dyn_var, manifest_line, last_seen               \
| rename dyn_var AS "Dynamically-scoped Variable"       \
| rename manifest_line AS "Manifest Line"               \
| rename last_seen AS "Last Seen"
